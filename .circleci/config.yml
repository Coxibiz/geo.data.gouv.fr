version: 2

defaults:
  workspace_root: &workspace_root
    ~/geodatagouv

  nodejs_container: &nodejs_container
    working_directory: *workspace_root
    docker:
      - image: circleci/node:8

  golang_container: &golang_container
    working_directory: *workspace_root
    docker:
      - image: circleci/golang:1

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v1-geodatagouv-node-{{ checksum "yarn.lock" }}
        - v1-geodatagouv-node-

jobs:
  checkout:
    <<: *nodejs_container
    steps:
      - checkout

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  install:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore yarn cache
          keys:
            - v1-geodatagouv-yarn-{{ checksum "yarn.lock" }}
            - v1-geodatagouv-yarn-

      - run:
          name: Install dependencies
          command: yarn

      - save_cache:
          name: Save yarn cache
          key: v1-geodatagouv-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn/

      - save_cache:
          name: Save node_modules cache
          key: v1-geodatagouv-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

  lint:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Lint JavaScript
          command: yarn lint:scripts

  test:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Run tests
          command: yarn test:ci

      - store_test_results:
          path: reports/tests/

      - run:
          name: Upload code coverage to codecov
          command: yarn codecov

  build:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Build output bundles
          command: yarn build

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .next/

  changelog:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore changelog cache
          keys:
            - v1-geodatagouv-changelog-{{ .BuildNum }}
            - v1-geodatagouv-changelog-

      - run:
          name: Generate changelog
          command: |
            if [ $CIRCLE_TAG ]; then
              PREV_TAG=$(git describe --abbrev=0 --tags $CIRCLE_TAG^)

              echo "[+] Running for range $PREV_TAG...$CIRCLE_TAG"

              node_modules/.bin/lerna-changelog --tag-from $PREV_TAG --tag-to $CIRCLE_TAG > CHANGELOG.md
            else
              PREV_TAG=$(git describe --abbrev=0 --tags)

              echo "[+] Running from $PREV_TAG"

              node_modules/.bin/lerna-changelog --tag-from $PREV_TAG > CHANGELOG.md
            fi

      - save_cache:
          name: Save changelog cache
          key: v1-geodatagouv-changelog-{{ .BuildNum }}
          paths:
            - .changelog/

      - run:
          name: Display changelog
          command: cat CHANGELOG.md

      - persist_to_workspace:
          name: Persist changelog
          root: *workspace_root
          paths:
            - CHANGELOG.md

  deploy:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - add_ssh_keys:
          fingerprints:
            - 15:6e:be:9c:af:66:a8:b4:2b:be:9a:cd:03:d4:f3:87

      - run:
          name: Setup SSH to GitHub
          command: ssh-keyscan github.com > ~/.ssh/known_hosts

      - run:
          name: Set SSH user email
          command: git config --global user.email "infra@beta.gouv.fr"

      - run:
          name: Set SSH user name
          command: git config --global user.name "CircleCI"

      - deploy:
          name: Deploy to gh-pages branch on GitHub
          command: yarn deploy

  release:
    <<: *golang_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Install github-release
          command: go get github.com/aktau/github-release

      - run:
          name: Create GitHub release
          command: github-release release --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --description "$(cat CHANGELOG.md)" --name $CIRCLE_TAG

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - checkout:
          filters: *default_filters

      - install:
          requires:
            - checkout
          filters: *default_filters

      - lint:
          requires:
            - install
          filters: *default_filters

      # - test:
      #     requires:
      #       - install
      #     filters: *default_filters

      - build:
          requires:
            - install
          filters: *default_filters

      - changelog:
          requires:
            - install
          filters: *default_filters

      - deploy:
          requires:
            - lint
            # - test
            - build
          filters:
            <<: *default_filters
            branches:
              ignore: '/.*/'

      - release:
          requires:
            - changelog
          filters:
            <<: *default_filters
            branches:
              ignore: /.*/
